;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 23/09/2016 4:38:36 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2815      	GOTO       21
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x080D      	MOVF       ___DoICPAddr+1, 0
0x0005	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0006	0x080C      	MOVF       ___DoICPAddr, 0
0x0007	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0008	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0009	0x2003      	CALL       _____DoICP
0x000A	0x118A      	BCF        PCLATH, 3
0x000B	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000C	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000D	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000E	0x0A8C      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x000F	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0010	0x0A8D      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0011	0x03C0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0012	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0013	0x2809      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0014	0x0008      	RETURN
; end of ___CC2DW
_main:
;LED2.c,22 :: 		void main(void){             // Iniciamos el programa principal
;LED2.c,24 :: 		TRISB = 0x00;             // Seteamos el puerto B como salida
0x0015	0x1683      	BSF        STATUS, 5
0x0016	0x0186      	CLRF       TRISB
;LED2.c,26 :: 		do{                       // Iniciamos el bucle do ... While infinito
L_main0:
;LED2.c,28 :: 		for(i=0; i<=255; ++i){  // Declaramos FOR incrementando de 0 a 255
0x0017	0x018E      	CLRF       _i
0x0018	0x018F      	CLRF       _i+1
L_main3:
0x0019	0x3080      	MOVLW      128
0x001A	0x00C0      	MOVWF      R0
0x001B	0x3080      	MOVLW      128
0x001C	0x060F      	XORWF      _i+1, 0
0x001D	0x0240      	SUBWF      R0, 0
0x001E	0x1D03      	BTFSS      STATUS, 2
0x001F	0x2822      	GOTO       L__main8
0x0020	0x080E      	MOVF       _i, 0
0x0021	0x3CFF      	SUBLW      255
L__main8:
0x0022	0x1C03      	BTFSS      STATUS, 0
0x0023	0x2839      	GOTO       L_main4
;LED2.c,30 :: 		PORTB = i;             // Salida por el puerto B, la variable "i"
0x0024	0x080E      	MOVF       _i, 0
0x0025	0x1283      	BCF        STATUS, 5
0x0026	0x0086      	MOVWF      PORTB
;LED2.c,32 :: 		delay_ms(500);         // Tiempo de espera de 500ms
0x0027	0x3003      	MOVLW      3
0x0028	0x00CB      	MOVWF      R11
0x0029	0x308A      	MOVLW      138
0x002A	0x00CC      	MOVWF      R12
0x002B	0x3055      	MOVLW      85
0x002C	0x00CD      	MOVWF      R13
L_main6:
0x002D	0x0BCD      	DECFSZ     R13, 1
0x002E	0x282D      	GOTO       L_main6
0x002F	0x0BCC      	DECFSZ     R12, 1
0x0030	0x282D      	GOTO       L_main6
0x0031	0x0BCB      	DECFSZ     R11, 1
0x0032	0x282D      	GOTO       L_main6
0x0033	0x0000      	NOP
0x0034	0x0000      	NOP
;LED2.c,28 :: 		for(i=0; i<=255; ++i){  // Declaramos FOR incrementando de 0 a 255
0x0035	0x0A8E      	INCF       _i, 1
0x0036	0x1903      	BTFSC      STATUS, 2
0x0037	0x0A8F      	INCF       _i+1, 1
;LED2.c,34 :: 		}                       // Termina la función FOR
0x0038	0x2819      	GOTO       L_main3
L_main4:
;LED2.c,36 :: 		}while(1);                // Termina el bucle do ... While infinito
0x0039	0x2817      	GOTO       L_main0
;LED2.c,38 :: 		}                            // Termina el programa principal
L_end_main:
0x003A	0x283A      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [6]    _____DoICP
0x0009      [12]    ___CC2DW
0x0015      [38]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000C       [2]    ___DoICPAddr
0x000E       [2]    _i
0x0040       [1]    R0
0x0041       [1]    R1
0x0042       [1]    R2
0x0043       [1]    R3
0x0044       [1]    R4
0x0045       [1]    R5
0x0046       [1]    R6
0x0047       [1]    R7
0x0048       [1]    R8
0x0049       [1]    R9
0x004A       [1]    R10
0x004B       [1]    R11
0x004C       [1]    R12
0x004D       [1]    R13
0x004E       [1]    R14
0x004F       [1]    R15
0x0086       [1]    TRISB
